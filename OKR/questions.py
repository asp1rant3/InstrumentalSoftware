from array import*

def get_multiplier(unit):
    if unit == 1:
        print("Компиляция (программирование) — трансляция программы, составленной на исходном языке высокого уровня, в эквивалентную программу на низкоуровневом языке, близком машинному коду (абсолютный код, объектный модуль, иногда на язык ассемблера), выполняемая компилятором.")
    elif unit == 2:
        print("Дайте описание команде ‘type(объект)’ : зачем она нужна, как ее применять, пример использование.")
    
    elif unit == 3:
        print("Создать программу, которая определяет количество трехзначных натуральных чисел, сумма цифр которых равна n. Число n вводиться с клавиатуры")
    elif unit == 4:
        print("Дайте определение понятию «компиляция».")
    elif unit == 5:
        print("Создать программу, которая вычисляет сумму элементов массива, которые являются степенями пятерки и индексы которых есть нечетные числа.")
        my_array = array('i',[])
        for i in my_array:
            inout = my_array[]
        for i in my_array:
            print(my_array[i])
            
    elif unit == 6:
        print("Переменная (программирование) — поименованная, либо адресуемая иным способом область памяти, адрес которой можно использовать для осуществления доступа к данным и изменять значение в ходе выполнения программы.")   
    elif unit == 7:
        print("Дайте определение понятию «компиляция».")
    elif unit == 8:
        print("Дайте определение понятию «компиляция».")    
    elif unit == 9:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 10:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 11:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 12:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 13:
        print("Дайте определение понятию «компиляция».")
    elif unit == 14:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 15:
        print("Кортеж — это неизменяемый список. Кортеж не может быть изменён никаким способом после его создания. Кортеж определяется так же, как список, за исключением того, что набор элементов заключается в круглые скобки, а не в квадратные.")
    elif unit == 16:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 17:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 18:
        print("Дайте определение понятию «компиляция».")
    elif unit == 19:
        print("Ветвление — одна из трёх (наряду с последовательным исполнением команд и циклом) базовых конструкций структурного программирования.")  
    elif unit == 20:
        print("Дайте определение понятию «компиляция».")
    elif unit == 21:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 22:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 23:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 24:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 25:
        print("Дайте определение понятию «компиляция».") 
    elif unit == 26:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 27:
        print("Дайте определение понятию «компиляция».")
    elif unit == 28:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 29:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 30:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 31:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 32:
        print("Дайте определение понятию «компиляция».") 
    elif unit == 33:
        print("Интерпретация — в программировании выполнение исходного кода программы.")  
    elif unit == 34:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 35:
        print("Дайте определение понятию «компиляция».")  
    elif unit == 36:
        print("Дайте определение понятию «компиляция».")    
    elif unit == 37:
        print("Строки в Python - упорядоченные последовательности символов, используемые для хранения и представления текстовой информации, поэтому с помощью строк можно работать со всем, что может быть представлено в текстовой форме. Это первая часть о работе со строками, а именно о литералах строк.")
    elif unit == 38:
        print("Аргумент функции — независимая переменная, от значений которой зависят значения функции.") 
    elif unit == 40:
        print("Создать программу, которая находит все натуральные числа меньшие n, квадрат суммы цифр которых равен m. Числа m, n натуральные")
        
        
unit = int(input("Введите номер задания: "))
print(get_multiplier(unit))